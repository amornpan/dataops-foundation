version: '3.8'

services:
  # DataOps Foundation Application
  dataops-app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: dataops-foundation
    environment:
      - DATAOPS_APP_ENVIRONMENT=docker
      - DATAOPS_DATABASE_PRIMARY_HOST=mssql
      - DATAOPS_DATABASE_PRIMARY_PASSWORD=DataOps123!
      - DATAOPS_MONITORING_ENABLED=true
    volumes:
      - dataops-data:/app/data
      - dataops-logs:/app/logs
      - dataops-config:/app/config
    networks:
      - dataops-network
    depends_on:
      - mssql
    restart: unless-stopped
    command: ["python", "main.py", "--mode", "info"]

  # Microsoft SQL Server
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: dataops-mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=DataOps123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql
    networks:
      - dataops-network
    restart: unless-stopped

  # Jenkins CI/CD
  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    container_name: dataops-jenkins
    environment:
      - JENKINS_OPTS=--httpPort=8080
      - TZ=Asia/Bangkok
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - ../:/workspace
    networks:
      - dataops-network
    restart: unless-stopped

  # Prometheus Monitoring (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: dataops-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - dataops-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana Dashboard (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: dataops-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=DataOps123!
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - dataops-network
    depends_on:
      - prometheus
    restart: unless-stopped
    profiles:
      - monitoring

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: dataops-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - dataops-network
    restart: unless-stopped
    profiles:
      - cache

  # Development Environment
  dataops-dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: dataops-dev
    environment:
      - DATAOPS_APP_ENVIRONMENT=development
      - DATAOPS_APP_DEBUG=true
      - DATAOPS_DATABASE_PRIMARY_HOST=mssql
      - DATAOPS_DATABASE_PRIMARY_PASSWORD=DataOps123!
    volumes:
      - ../:/app
      - dataops-dev-data:/app/data
    networks:
      - dataops-network
    depends_on:
      - mssql
    profiles:
      - development
    command: ["tail", "-f", "/dev/null"]  # Keep container running for development

  # Test Environment
  dataops-test:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: dataops-test
    environment:
      - DATAOPS_APP_ENVIRONMENT=test
      - DATAOPS_DATABASE_PRIMARY_HOST=mssql
      - DATAOPS_DATABASE_PRIMARY_PASSWORD=DataOps123!
    volumes:
      - ../:/app
    networks:
      - dataops-network
    depends_on:
      - mssql
    profiles:
      - testing
    command: ["python", "tests/test_enhanced_etl.py"]

volumes:
  # Application volumes
  dataops-data:
    driver: local
  dataops-logs:
    driver: local
  dataops-config:
    driver: local
  dataops-dev-data:
    driver: local

  # Database volumes
  mssql-data:
    driver: local

  # CI/CD volumes
  jenkins-data:
    driver: local

  # Monitoring volumes
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

  # Cache volumes
  redis-data:
    driver: local

networks:
  dataops-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
