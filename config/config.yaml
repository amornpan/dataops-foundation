app:
  name: "DataOps Foundation"
  version: "1.0.0"
  environment: "development"
  debug: false
  description: "Enterprise DataOps platform for modern data engineering"

logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/dataops.log"
  error_file: "logs/error.log"
  json_format: false
  max_size: "10MB"
  backup_count: 5

database:
  primary:
    type: "mssql"
    host: "35.185.131.47"
    port: 1433
    database: "TestDB"
    username: "SA"
    password: "Passw0rd123456"
    connection_timeout: 30
    command_timeout: 300
    pool_size: 10
    max_overflow: 20
    
  secondary:
    type: "postgresql"
    host: "localhost"
    port: 5432
    database: "dataops_staging"
    username: "postgres"
    password: "changeme"
    connection_timeout: 30

data_quality:
  max_null_percentage: 30.0
  acceptable_max_null: 26
  quality_thresholds:
    completeness: 0.85
    uniqueness: 0.90
    consistency: 0.90
    validity: 0.85
    accuracy: 0.80
    timeliness: 0.85
  
  validation_rules:
    email_format: true
    phone_format: true
    date_range_check: true
    numeric_range_check: true
    
  profiling:
    enabled: true
    sample_size: 10000
    include_correlations: true

monitoring:
  enabled: true
  interval: 60
  metrics_retention_days: 30
  
  thresholds:
    cpu_usage:
      max: 80.0
      severity: "medium"
    memory_usage:
      max: 85.0
      severity: "medium"
    disk_usage:
      max: 90.0
      severity: "high"
    pipeline_duration:
      max: 3600.0
      severity: "medium"
    data_quality_score:
      min: 80.0
      severity: "high"
    error_rate:
      max: 0.05
      severity: "high"
      
  alerts:
    enabled: true
    channels: ["log", "email"]
    cooldown_minutes: 15
    
    email:
      enabled: false
      smtp_server: "smtp.gmail.com"
      smtp_port: 587
      use_tls: true
      username: "alerts@company.com"
      password: "changeme"
      from_address: "DataOps Foundation <alerts@company.com>"
      to_addresses: ["admin@company.com"]
      
    webhook:
      enabled: false
      url: "https://hooks.slack.com/services/YOUR/WEBHOOK/URL"
      timeout: 30

etl:
  batch_size: 10000
  max_workers: 4
  timeout: 3600
  retry_attempts: 3
  retry_delay: 60
  chunk_size: 1000
  
  processing:
    parallel_processing: true
    memory_limit: "2GB"
    temp_directory: "temp/"
    
  pipelines:
    default:
      enable_monitoring: true
      enable_profiling: true
      auto_backup: true
      
  transformations:
    date_formats: ["%Y-%m-%d", "%d/%m/%Y", "%m/%d/%Y", "%Y-%m-%d %H:%M:%S"]
    text_encoding: "utf-8"
    decimal_separator: "."
    thousands_separator: ","

security:
  encryption_key: "change-this-secret-key-in-production"
  jwt_secret: "jwt-secret-key-change-in-production"
  password_min_length: 8
  session_timeout: 3600
  
  authentication:
    enabled: false
    provider: "local"  # local, ldap, oauth
    
  authorization:
    enabled: false
    role_based: true
    
  encryption:
    enabled: false
    algorithm: "AES-256-GCM"
    
  audit:
    enabled: true
    log_level: "INFO"
    retention_days: 90

storage:
  data_directory: "data/"
  temp_directory: "temp/"
  backup_directory: "backup/"
  logs_directory: "logs/"
  
  limits:
    max_file_size: "100MB"
    max_total_size: "10GB"
    
  allowed_file_types: ["csv", "json", "xlsx", "parquet", "txt"]
  
  cleanup:
    enabled: true
    temp_retention_hours: 24
    backup_retention_days: 30

performance:
  profiling:
    enabled: false
    sample_rate: 0.1
    
  caching:
    enabled: true
    type: "memory"  # memory, redis, file
    max_size: "500MB"
    ttl: 3600
    
  optimization:
    lazy_loading: true
    batch_operations: true
    connection_pooling: true

integrations:
  prometheus:
    enabled: false
    port: 9090
    metrics_path: "/metrics"
    
  grafana:
    enabled: false
    dashboard_url: "http://localhost:3000"
    
  jenkins:
    enabled: false
    url: "http://localhost:8080"
    username: "admin"
    api_token: "your-api-token"
    
  docker:
    enabled: false
    registry: "docker.io"
    image_prefix: "dataops-foundation"
    
  kubernetes:
    enabled: false
    namespace: "dataops"
    config_file: "~/.kube/config"

features:
  experimental:
    enabled: false
    features: []
    
  beta:
    enabled: false
    features: []
    
  advanced:
    machine_learning: false
    real_time_processing: false
    distributed_computing: false
